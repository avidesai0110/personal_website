{"ast":null,"code":"var _jsxFileName = \"/Users/avi/Desktop/mywebsite/personal-website/src/components/Bio.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Bio.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Bio = () => {\n  _s();\n  const [activeBio, setActiveBio] = useState(0);\n  useEffect(() => {\n    const sections = document.querySelectorAll('.bio-trigger');\n    const options = {\n      root: null,\n      threshold: 0.5\n    };\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          setActiveBio(parseInt(entry.target.dataset.index));\n        }\n      });\n    }, options);\n    sections.forEach(section => {\n      observer.observe(section);\n    });\n    return () => {\n      sections.forEach(section => observer.unobserve(section));\n    };\n  }, []);\n  const bioContents = [\"Hi there! I’m Avi, a passionate software engineer who loves creating visually engaging user experiences. My journey in tech started with building small web apps, and it has evolved into solving complex front-end challenges.\", \"I’ve had the opportunity to work on a variety of projects, from product management roles to sales engineering. This diverse background has given me a unique perspective on how to combine technical skills with stakeholder needs to build impactful products.\", \"My goal is to keep learning and growing as a developer and product manager, taking on new challenges and building tools that make a real difference. In my spare time, you can find me exploring new tech trends or enjoying a good cup of coffee.\"];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"bio\",\n    className: \"bio\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bio-content\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"bio-text\",\n        children: bioContents[activeBio]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bio-trigger\",\n      \"data-index\": \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bio-trigger\",\n      \"data-index\": \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bio-trigger\",\n      \"data-index\": \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Bio, \"bWw7Q/6rzfJztiJ9g6zZow6RX8c=\");\n_c = Bio;\nexport default Bio;\nvar _c;\n$RefreshReg$(_c, \"Bio\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Bio","_s","activeBio","setActiveBio","sections","document","querySelectorAll","options","root","threshold","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","parseInt","target","dataset","index","section","observe","unobserve","bioContents","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/avi/Desktop/mywebsite/personal-website/src/components/Bio.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Bio.css';\n\nconst Bio = () => {\n  const [activeBio, setActiveBio] = useState(0);\n\n  useEffect(() => {\n    const sections = document.querySelectorAll('.bio-trigger');\n    const options = {\n      root: null,\n      threshold: 0.5,\n    };\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setActiveBio(parseInt(entry.target.dataset.index));\n        }\n      });\n    }, options);\n\n    sections.forEach((section) => {\n      observer.observe(section);\n    });\n\n    return () => {\n      sections.forEach((section) => observer.unobserve(section));\n    };\n  }, []);\n\n  const bioContents = [\n    \"Hi there! I’m Avi, a passionate software engineer who loves creating visually engaging user experiences. My journey in tech started with building small web apps, and it has evolved into solving complex front-end challenges.\",\n    \"I’ve had the opportunity to work on a variety of projects, from product management roles to sales engineering. This diverse background has given me a unique perspective on how to combine technical skills with stakeholder needs to build impactful products.\",\n    \"My goal is to keep learning and growing as a developer and product manager, taking on new challenges and building tools that make a real difference. In my spare time, you can find me exploring new tech trends or enjoying a good cup of coffee.\"\n  ];\n\n  return (\n    <section id=\"bio\" className=\"bio\">\n      <div className=\"bio-content\">\n        <p className=\"bio-text\">{bioContents[activeBio]}</p>\n      </div>\n      {/* Hidden trigger sections to observe scrolling */}\n      <div className=\"bio-trigger\" data-index=\"0\"></div>\n      <div className=\"bio-trigger\" data-index=\"1\"></div>\n      <div className=\"bio-trigger\" data-index=\"2\"></div>\n    </section>\n  );\n};\n\nexport default Bio;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACd,MAAMQ,QAAQ,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,cAAc,CAAC;IAC1D,MAAMC,OAAO,GAAG;MACdC,IAAI,EAAE,IAAI;MACVC,SAAS,EAAE;IACb,CAAC;IAED,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;MACrDA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACxBZ,YAAY,CAACa,QAAQ,CAACF,KAAK,CAACG,MAAM,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC;QACpD;MACF,CAAC,CAAC;IACJ,CAAC,EAAEZ,OAAO,CAAC;IAEXH,QAAQ,CAACS,OAAO,CAAEO,OAAO,IAAK;MAC5BV,QAAQ,CAACW,OAAO,CAACD,OAAO,CAAC;IAC3B,CAAC,CAAC;IAEF,OAAO,MAAM;MACXhB,QAAQ,CAACS,OAAO,CAAEO,OAAO,IAAKV,QAAQ,CAACY,SAAS,CAACF,OAAO,CAAC,CAAC;IAC5D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,WAAW,GAAG,CAClB,iOAAiO,EACjO,iQAAiQ,EACjQ,oPAAoP,CACrP;EAED,oBACExB,OAAA;IAASyB,EAAE,EAAC,KAAK;IAACC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAC/B3B,OAAA;MAAK0B,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1B3B,OAAA;QAAG0B,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAEH,WAAW,CAACrB,SAAS;MAAC;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eAEN/B,OAAA;MAAK0B,SAAS,EAAC,aAAa;MAAC,cAAW;IAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClD/B,OAAA;MAAK0B,SAAS,EAAC,aAAa;MAAC,cAAW;IAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClD/B,OAAA;MAAK0B,SAAS,EAAC,aAAa;MAAC,cAAW;IAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEd,CAAC;AAAC7B,EAAA,CA5CID,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA8CT,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}