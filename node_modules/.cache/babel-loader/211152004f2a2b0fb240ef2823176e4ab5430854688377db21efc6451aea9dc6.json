{"ast":null,"code":"var _jsxFileName = \"/Users/avi/Desktop/mywebsite/personal-website/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport * as THREE from 'three';\nimport profile from './profile.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const mountRef = useRef(null);\n  const [flippingText, setFlippingText] = useState(\"trying to build cool stuff\");\n  useEffect(() => {\n    const texts = [\"trying to build cool stuff\", \"trying to meet new people\"];\n    let index = 0;\n    const interval = setInterval(() => {\n      index = (index + 1) % texts.length;\n      setFlippingText(texts[index]);\n    }, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    const currentMount = mountRef.current;\n\n    // Scene, Camera, Renderer setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 800);\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0xffffff, 0); // Transparent background\n    currentMount.appendChild(renderer.domElement);\n\n    // Light setup for a soft and inviting effect\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.9);\n    scene.add(ambientLight);\n    const pointLight = new THREE.PointLight(0xffffff, 0.6);\n    pointLight.position.set(200, 300, 400);\n    scene.add(pointLight);\n\n    // Function to create a rounded star shape\n    const createRoundedStar = (outerRadius, innerRadius, points, depth, smoothness) => {\n      const starShape = new THREE.Shape();\n\n      // Calculate the angles and define points for the star\n      const step = Math.PI / points;\n      for (let i = 0; i < 2 * points; i++) {\n        const radius = i % 2 === 0 ? outerRadius : innerRadius;\n        const angle = i * step;\n        const x = Math.cos(angle) * radius;\n        const y = Math.sin(angle) * radius;\n        if (i === 0) {\n          starShape.moveTo(x, y);\n        } else {\n          starShape.lineTo(x, y);\n        }\n      }\n      starShape.closePath();\n\n      // Extrude settings for 3D star with soft, rounded edges\n      const extrudeSettings = {\n        depth: depth,\n        bevelEnabled: true,\n        bevelThickness: smoothness,\n        bevelSize: smoothness * 2,\n        bevelSegments: 10 // Increased segments for smoother, softer edges\n      };\n      return new THREE.ExtrudeGeometry(starShape, extrudeSettings);\n    };\n\n    // Custom Rounded Box Geometry (to restore the original box)\n    const createRoundedBox = (width, height, depth, radius, smoothness) => {\n      const shape = new THREE.Shape();\n      const halfWidth = width / 2 - radius;\n      const halfHeight = height / 2 - radius;\n      shape.moveTo(-halfWidth, halfHeight);\n      shape.lineTo(halfWidth, halfHeight);\n      shape.quadraticCurveTo(width / 2, halfHeight, width / 2, halfHeight - radius);\n      shape.lineTo(width / 2, -halfHeight);\n      shape.quadraticCurveTo(width / 2, -height / 2, halfWidth, -height / 2);\n      shape.lineTo(-halfWidth, -height / 2);\n      shape.quadraticCurveTo(-width / 2, -height / 2, -width / 2, -halfHeight);\n      shape.lineTo(-width / 2, halfHeight - radius);\n      shape.quadraticCurveTo(-width / 2, halfHeight, -halfWidth, halfHeight);\n      const extrudeSettings = {\n        depth: depth,\n        bevelEnabled: true,\n        bevelSegments: smoothness,\n        steps: 2,\n        bevelSize: radius,\n        bevelThickness: radius\n      };\n      return new THREE.ExtrudeGeometry(shape, extrudeSettings);\n    };\n\n    // Geometries for 3D shapes, including new rounded star and shorter pyramid\n    const geometries = [new THREE.SphereGeometry(50, 64, 64),\n    // Sphere with increased segments\n    new THREE.ConeGeometry(50, 60, 4),\n    // Pyramid with lower height for the top right\n    new THREE.ConeGeometry(40, 80, 32),\n    // Cone with more segments\n    createRoundedBox(70, 70, 70, 10, 16),\n    // Custom rounded box (your original square shape)\n    new THREE.TorusGeometry(35, 15, 30, 100),\n    // Torus with increased segments for smoother edges\n    createRoundedStar(40, 20, 5, 20, 2) // Rounded star with soft edges\n    ];\n\n    // Define darker colors for each shape\n    const colors = [0xcc0000,\n    // Dark Red\n    0x003366,\n    // Dark Blue\n    0x006600,\n    // Dark Green\n    0xcc6600,\n    // Dark Orange\n    0x999900,\n    // Dark Yellow\n    0x660099 // Dark Purple\n    ];\n    const meshes = geometries.map((geometry, index) => {\n      const material = new THREE.MeshPhongMaterial({\n        color: colors[index]\n      });\n      const mesh = new THREE.Mesh(geometry, material);\n\n      // Custom positions for each shape, making them further from the middle\n      const positions = [{\n        x: -300,\n        y: 200,\n        z: 100\n      },\n      // Top left (Sphere)\n      {\n        x: 300,\n        y: 200,\n        z: 100\n      },\n      // Top right (Pyramid)\n      {\n        x: -300,\n        y: 0,\n        z: 100\n      },\n      // Middle left (Cone)\n      {\n        x: 300,\n        y: 0,\n        z: 100\n      },\n      // Middle right (Rounded Box)\n      {\n        x: -300,\n        y: -200,\n        z: 100\n      },\n      // Bottom left (Torus)\n      {\n        x: 300,\n        y: -200,\n        z: 100\n      } // Bottom right (Star)\n      ];\n      const position = positions[index % positions.length];\n      mesh.position.set(position.x, position.y, position.z);\n      scene.add(mesh);\n      return mesh;\n    });\n\n    // Animate the shapes\n    const animate = () => {\n      requestAnimationFrame(animate);\n      meshes.forEach(mesh => {\n        mesh.rotation.x += 0.002;\n        mesh.rotation.y += 0.002;\n      });\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup function\n    return () => {\n      if (currentMount) {\n        currentMount.removeChild(renderer.domElement);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mountRef,\n        className: \"floating-shapes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sliding-name-background\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-slide\",\n          children: \"Avi Desai \\u2022 Avi Desai \\u2022 Avi Desai\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"intro-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"greeting-text\",\n            children: \"Hi, I'm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"name-text\",\n            children: \"Avi!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"flipping-text\",\n          children: flippingText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: profile,\n          alt: \"Avi\",\n          className: \"profile-picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"bio-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Bio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Passionate software engineer with extensive experience in frontend development, creating seamless and visually engaging user experiences.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/tL3B47jDrtplgkmDb0jPiBx7x4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","THREE","profile","jsxDEV","_jsxDEV","App","_s","mountRef","flippingText","setFlippingText","texts","index","interval","setInterval","length","clearInterval","currentMount","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","alpha","antialias","setSize","setClearColor","appendChild","domElement","ambientLight","AmbientLight","add","pointLight","PointLight","createRoundedStar","outerRadius","innerRadius","points","depth","smoothness","starShape","Shape","step","Math","PI","i","radius","angle","x","cos","y","sin","moveTo","lineTo","closePath","extrudeSettings","bevelEnabled","bevelThickness","bevelSize","bevelSegments","ExtrudeGeometry","createRoundedBox","width","height","shape","halfWidth","halfHeight","quadraticCurveTo","steps","geometries","SphereGeometry","ConeGeometry","TorusGeometry","colors","meshes","map","geometry","material","MeshPhongMaterial","color","mesh","Mesh","positions","z","animate","requestAnimationFrame","forEach","rotation","render","removeChild","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/avi/Desktop/mywebsite/personal-website/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport * as THREE from 'three';\nimport profile from './profile.jpg';\n\nfunction App() {\n  const mountRef = useRef(null);\n  const [flippingText, setFlippingText] = useState(\"trying to build cool stuff\");\n\n  useEffect(() => {\n    const texts = [\"trying to build cool stuff\", \"trying to meet new people\"];\n    let index = 0;\n    const interval = setInterval(() => {\n      index = (index + 1) % texts.length;\n      setFlippingText(texts[index]);\n    }, 3000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    const currentMount = mountRef.current;\n\n    // Scene, Camera, Renderer setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 800);\n\n    const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0xffffff, 0); // Transparent background\n    currentMount.appendChild(renderer.domElement);\n\n    // Light setup for a soft and inviting effect\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.9);\n    scene.add(ambientLight);\n\n    const pointLight = new THREE.PointLight(0xffffff, 0.6);\n    pointLight.position.set(200, 300, 400);\n    scene.add(pointLight);\n\n    // Function to create a rounded star shape\n    const createRoundedStar = (outerRadius, innerRadius, points, depth, smoothness) => {\n      const starShape = new THREE.Shape();\n\n      // Calculate the angles and define points for the star\n      const step = Math.PI / points;\n      for (let i = 0; i < 2 * points; i++) {\n        const radius = i % 2 === 0 ? outerRadius : innerRadius;\n        const angle = i * step;\n        const x = Math.cos(angle) * radius;\n        const y = Math.sin(angle) * radius;\n        if (i === 0) {\n          starShape.moveTo(x, y);\n        } else {\n          starShape.lineTo(x, y);\n        }\n      }\n      starShape.closePath();\n\n      // Extrude settings for 3D star with soft, rounded edges\n      const extrudeSettings = {\n        depth: depth,\n        bevelEnabled: true,\n        bevelThickness: smoothness,\n        bevelSize: smoothness * 2,\n        bevelSegments: 10,  // Increased segments for smoother, softer edges\n      };\n\n      return new THREE.ExtrudeGeometry(starShape, extrudeSettings);\n    };\n\n    // Custom Rounded Box Geometry (to restore the original box)\n    const createRoundedBox = (width, height, depth, radius, smoothness) => {\n      const shape = new THREE.Shape();\n      const halfWidth = width / 2 - radius;\n      const halfHeight = height / 2 - radius;\n\n      shape.moveTo(-halfWidth, halfHeight);\n      shape.lineTo(halfWidth, halfHeight);\n      shape.quadraticCurveTo(width / 2, halfHeight, width / 2, halfHeight - radius);\n      shape.lineTo(width / 2, -halfHeight);\n      shape.quadraticCurveTo(width / 2, -height / 2, halfWidth, -height / 2);\n      shape.lineTo(-halfWidth, -height / 2);\n      shape.quadraticCurveTo(-width / 2, -height / 2, -width / 2, -halfHeight);\n      shape.lineTo(-width / 2, halfHeight - radius);\n      shape.quadraticCurveTo(-width / 2, halfHeight, -halfWidth, halfHeight);\n\n      const extrudeSettings = {\n        depth: depth,\n        bevelEnabled: true,\n        bevelSegments: smoothness,\n        steps: 2,\n        bevelSize: radius,\n        bevelThickness: radius,\n      };\n\n      return new THREE.ExtrudeGeometry(shape, extrudeSettings);\n    };\n\n    // Geometries for 3D shapes, including new rounded star and shorter pyramid\n    const geometries = [\n      new THREE.SphereGeometry(50, 64, 64), // Sphere with increased segments\n      new THREE.ConeGeometry(50, 60, 4), // Pyramid with lower height for the top right\n      new THREE.ConeGeometry(40, 80, 32), // Cone with more segments\n      createRoundedBox(70, 70, 70, 10, 16), // Custom rounded box (your original square shape)\n      new THREE.TorusGeometry(35, 15, 30, 100), // Torus with increased segments for smoother edges\n      createRoundedStar(40, 20, 5, 20, 2), // Rounded star with soft edges\n    ];\n\n    // Define darker colors for each shape\n    const colors = [\n      0xcc0000, // Dark Red\n      0x003366, // Dark Blue\n      0x006600, // Dark Green\n      0xcc6600, // Dark Orange\n      0x999900, // Dark Yellow\n      0x660099  // Dark Purple\n    ];\n\n    const meshes = geometries.map((geometry, index) => {\n      const material = new THREE.MeshPhongMaterial({ color: colors[index] });\n      const mesh = new THREE.Mesh(geometry, material);\n\n      // Custom positions for each shape, making them further from the middle\n      const positions = [\n        { x: -300, y: 200, z: 100 },  // Top left (Sphere)\n        { x: 300, y: 200, z: 100 },   // Top right (Pyramid)\n        { x: -300, y: 0, z: 100 },    // Middle left (Cone)\n        { x: 300, y: 0, z: 100 },     // Middle right (Rounded Box)\n        { x: -300, y: -200, z: 100 }, // Bottom left (Torus)\n        { x: 300, y: -200, z: 100 },  // Bottom right (Star)\n      ];\n\n      const position = positions[index % positions.length];\n      mesh.position.set(position.x, position.y, position.z);\n\n      scene.add(mesh);\n      return mesh;\n    });\n\n    // Animate the shapes\n    const animate = () => {\n      requestAnimationFrame(animate);\n      meshes.forEach((mesh) => {\n        mesh.rotation.x += 0.002;\n        mesh.rotation.y += 0.002;\n      });\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup function\n    return () => {\n      if (currentMount) {\n        currentMount.removeChild(renderer.domElement);\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div ref={mountRef} className=\"floating-shapes\"></div>\n        <div className=\"sliding-name-background\">\n          <div className=\"name-slide\">Avi Desai • Avi Desai • Avi Desai</div>\n        </div>\n        <div className=\"hero-container\">\n          <div className=\"intro-text\">\n            <span className=\"greeting-text\">Hi, I'm</span> <span className=\"name-text\">Avi!</span>\n          </div>\n          <p className=\"flipping-text\">{flippingText}</p>\n          <img src={profile} alt=\"Avi\" className=\"profile-picture\" />\n        </div>\n      </header>\n\n      <main className=\"App-main\">\n        <section className=\"bio-section\">\n          <h2>Bio</h2>\n          <p>\n            Passionate software engineer with extensive experience in frontend development, creating seamless and visually engaging user experiences.\n          </p>\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}