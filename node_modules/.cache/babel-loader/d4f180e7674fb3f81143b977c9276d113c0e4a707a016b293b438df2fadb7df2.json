{"ast":null,"code":"var _jsxFileName = \"/Users/avi/Desktop/mywebsite/personal-website/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './App.css';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const currentMount = mountRef.current;\n\n    // Scene Setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 400;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0xffffff); // White background\n    currentMount.appendChild(renderer.domElement);\n\n    // Lighting\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.8);\n    scene.add(ambientLight);\n    const pointLight = new THREE.PointLight(0xffffff, 1);\n    pointLight.position.set(200, 200, 200);\n    scene.add(pointLight);\n\n    // Rounded Cube (Soft Corners)\n    const cubeGeometry = new THREE.BoxGeometry(100, 100, 100, 10, 10, 10);\n    const cubeMaterial = new THREE.MeshStandardMaterial({\n      color: 0x6a11cb,\n      emissive: 0x2575fc,\n      roughness: 0.5,\n      metalness: 0.1\n    });\n    const cube = new THREE.Mesh(cubeGeometry, cubeMaterial);\n    cube.position.set(-150, 50, 0);\n    scene.add(cube);\n\n    // Rounded Cylinder\n    const cylinderGeometry = new THREE.CylinderGeometry(50, 50, 150, 32);\n    const cylinderMaterial = new THREE.MeshStandardMaterial({\n      color: 0xff4b1f,\n      emissive: 0x1fddff,\n      roughness: 0.6,\n      metalness: 0.3\n    });\n    const cylinder = new THREE.Mesh(cylinderGeometry, cylinderMaterial);\n    cylinder.position.set(150, -50, 0);\n    scene.add(cylinder);\n\n    // Prism with Rounded Corners (Custom Shape)\n    const shape = new THREE.Shape();\n    const radius = 20;\n    shape.moveTo(radius, 0);\n    shape.lineTo(100 - radius, 0);\n    shape.quadraticCurveTo(100, 0, 100, radius);\n    shape.lineTo(100, 100 - radius);\n    shape.quadraticCurveTo(100, 100, 100 - radius, 100);\n    shape.lineTo(radius, 100);\n    shape.quadraticCurveTo(0, 100, 0, 100 - radius);\n    shape.lineTo(0, radius);\n    shape.quadraticCurveTo(0, 0, radius, 0);\n    const extrudeSettings = {\n      steps: 2,\n      depth: 100,\n      bevelEnabled: true,\n      bevelThickness: 10,\n      bevelSize: 10,\n      bevelOffset: 0,\n      bevelSegments: 5\n    };\n    const prismGeometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\n    const prismMaterial = new THREE.MeshStandardMaterial({\n      color: 0xffcc00,\n      emissive: 0xffa500,\n      roughness: 0.7,\n      metalness: 0.2\n    });\n    const prism = new THREE.Mesh(prismGeometry, prismMaterial);\n    prism.position.set(-150, -150, -50);\n    scene.add(prism);\n\n    // Animation Loop\n    const animate = function () {\n      requestAnimationFrame(animate);\n\n      // Rotations for animations\n      cube.rotation.x += 0.005;\n      cube.rotation.y += 0.005;\n      cylinder.rotation.x += 0.005;\n      cylinder.rotation.z += 0.005;\n      prism.rotation.y += 0.005;\n      prism.rotation.x += 0.005;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup on component unmount\n    return () => {\n      currentMount.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    ref: mountRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","App","_s","mountRef","currentMount","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","antialias","setSize","setClearColor","appendChild","domElement","ambientLight","AmbientLight","add","pointLight","PointLight","set","cubeGeometry","BoxGeometry","cubeMaterial","MeshStandardMaterial","color","emissive","roughness","metalness","cube","Mesh","cylinderGeometry","CylinderGeometry","cylinderMaterial","cylinder","shape","Shape","radius","moveTo","lineTo","quadraticCurveTo","extrudeSettings","steps","depth","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","prismGeometry","ExtrudeGeometry","prismMaterial","prism","animate","requestAnimationFrame","rotation","x","y","render","removeChild","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/avi/Desktop/mywebsite/personal-website/src/App.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './App.css';\nimport * as THREE from 'three';\n\nfunction App() {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    const currentMount = mountRef.current;\n\n    // Scene Setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    camera.position.z = 400;\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0xffffff); // White background\n    currentMount.appendChild(renderer.domElement);\n\n    // Lighting\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.8);\n    scene.add(ambientLight);\n    const pointLight = new THREE.PointLight(0xffffff, 1);\n    pointLight.position.set(200, 200, 200);\n    scene.add(pointLight);\n\n    // Rounded Cube (Soft Corners)\n    const cubeGeometry = new THREE.BoxGeometry(100, 100, 100, 10, 10, 10);\n    const cubeMaterial = new THREE.MeshStandardMaterial({\n      color: 0x6a11cb,\n      emissive: 0x2575fc,\n      roughness: 0.5,\n      metalness: 0.1,\n    });\n    const cube = new THREE.Mesh(cubeGeometry, cubeMaterial);\n    cube.position.set(-150, 50, 0);\n    scene.add(cube);\n\n    // Rounded Cylinder\n    const cylinderGeometry = new THREE.CylinderGeometry(50, 50, 150, 32);\n    const cylinderMaterial = new THREE.MeshStandardMaterial({\n      color: 0xff4b1f,\n      emissive: 0x1fddff,\n      roughness: 0.6,\n      metalness: 0.3,\n    });\n    const cylinder = new THREE.Mesh(cylinderGeometry, cylinderMaterial);\n    cylinder.position.set(150, -50, 0);\n    scene.add(cylinder);\n\n    // Prism with Rounded Corners (Custom Shape)\n    const shape = new THREE.Shape();\n    const radius = 20;\n    shape.moveTo(radius, 0);\n    shape.lineTo(100 - radius, 0);\n    shape.quadraticCurveTo(100, 0, 100, radius);\n    shape.lineTo(100, 100 - radius);\n    shape.quadraticCurveTo(100, 100, 100 - radius, 100);\n    shape.lineTo(radius, 100);\n    shape.quadraticCurveTo(0, 100, 0, 100 - radius);\n    shape.lineTo(0, radius);\n    shape.quadraticCurveTo(0, 0, radius, 0);\n    const extrudeSettings = {\n      steps: 2,\n      depth: 100,\n      bevelEnabled: true,\n      bevelThickness: 10,\n      bevelSize: 10,\n      bevelOffset: 0,\n      bevelSegments: 5,\n    };\n    const prismGeometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\n    const prismMaterial = new THREE.MeshStandardMaterial({\n      color: 0xffcc00,\n      emissive: 0xffa500,\n      roughness: 0.7,\n      metalness: 0.2,\n    });\n    const prism = new THREE.Mesh(prismGeometry, prismMaterial);\n    prism.position.set(-150, -150, -50);\n    scene.add(prism);\n\n    // Animation Loop\n    const animate = function () {\n      requestAnimationFrame(animate);\n\n      // Rotations for animations\n      cube.rotation.x += 0.005;\n      cube.rotation.y += 0.005;\n      cylinder.rotation.x += 0.005;\n      cylinder.rotation.z += 0.005;\n      prism.rotation.y += 0.005;\n      prism.rotation.x += 0.005;\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    // Cleanup on component unmount\n    return () => {\n      currentMount.removeChild(renderer.domElement);\n    };\n  }, []);\n\n  return <div className=\"App\" ref={mountRef}></div>;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}