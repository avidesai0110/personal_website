{"ast":null,"code":"var _jsxFileName = \"/Users/avi/Desktop/mywebsite/personal-website/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport * as THREE from 'three';\nimport profile from './profile.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const mountRef = useRef(null);\n  const [flippingText, setFlippingText] = useState(\"trying to build cool stuff\");\n  useEffect(() => {\n    const texts = [\"trying to build cool stuff\", \"trying to meet new people\"];\n    let index = 0;\n    const interval = setInterval(() => {\n      index = (index + 1) % texts.length;\n      setFlippingText(texts[index]);\n    }, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    const currentMount = mountRef.current;\n    if (!currentMount) return; // Ensure mount point is available\n\n    // Scene, Camera, Renderer setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 800);\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0xffffff, 0); // Transparent background\n    currentMount.appendChild(renderer.domElement);\n\n    // Light setup for a soft and inviting effect\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.9);\n    scene.add(ambientLight);\n    const pointLight = new THREE.PointLight(0xffffff, 0.6);\n    pointLight.position.set(200, 300, 400);\n    scene.add(pointLight);\n\n    // Debugging function\n    const logError = (message, error) => {\n      console.error(message, error);\n    };\n\n    // Create geometries with safety checks\n    const createSphere = () => {\n      try {\n        const geometry = new THREE.SphereGeometry(50, 64, 64);\n        const material = new THREE.MeshPhongMaterial({\n          color: 0xffae42,\n          shininess: 150,\n          flatShading: false\n        });\n        return new THREE.Mesh(geometry, material);\n      } catch (error) {\n        logError(\"Error creating sphere:\", error);\n        return null;\n      }\n    };\n    const createRoundedCylinder = () => {\n      try {\n        const geometry = new THREE.CylinderGeometry(20, 20, 100, 64, 64, true);\n        geometry.computeVertexNormals();\n        const material = new THREE.MeshPhongMaterial({\n          color: 0xffae42,\n          shininess: 150,\n          flatShading: false\n        });\n        return new THREE.Mesh(geometry, material);\n      } catch (error) {\n        logError(\"Error creating cylinder:\", error);\n        return null;\n      }\n    };\n    const createRoundedBox = () => {\n      try {\n        const shape = new THREE.Shape();\n        const radius = 10;\n        const width = 70;\n        const height = 70;\n        const halfWidth = width / 2 - radius;\n        const halfHeight = height / 2 - radius;\n        shape.moveTo(-halfWidth, halfHeight);\n        shape.lineTo(halfWidth, halfHeight);\n        shape.quadraticCurveTo(width / 2, halfHeight, width / 2, halfHeight - radius);\n        shape.lineTo(width / 2, -halfHeight);\n        shape.quadraticCurveTo(width / 2, -height / 2, halfWidth, -height / 2);\n        shape.lineTo(-halfWidth, -height / 2);\n        shape.quadraticCurveTo(-width / 2, -height / 2, -width / 2, -halfHeight);\n        shape.lineTo(-width / 2, halfHeight - radius);\n        shape.quadraticCurveTo(-width / 2, halfHeight, -halfWidth, halfHeight);\n        const extrudeSettings = {\n          depth: 70,\n          bevelEnabled: true,\n          bevelSegments: 16,\n          steps: 2,\n          bevelSize: radius,\n          bevelThickness: radius\n        };\n        const geometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\n        const material = new THREE.MeshPhongMaterial({\n          color: 0xffae42,\n          shininess: 150,\n          flatShading: false\n        });\n        return new THREE.Mesh(geometry, material);\n      } catch (error) {\n        logError(\"Error creating rounded box:\", error);\n        return null;\n      }\n    };\n\n    // Add geometries to scene, ensuring all are properly instantiated\n    const geometries = [createSphere(), createRoundedCylinder(), createRoundedBox(), new THREE.TorusGeometry(35, 15, 30, 100), new THREE.ConeGeometry(40, 80, 32), new THREE.DodecahedronGeometry(40, 1)].filter(geometry => geometry !== null);\n    const meshes = geometries.map((geometry, index) => {\n      if (!geometry) return null;\n      const material = new THREE.MeshPhongMaterial({\n        color: 0xffae42,\n        shininess: 150,\n        flatShading: false\n      });\n      const mesh = new THREE.Mesh(geometry, material);\n\n      // Set positions based on index\n      const positions = [{\n        x: -450,\n        y: 250,\n        z: 100\n      }, {\n        x: 450,\n        y: 250,\n        z: 100\n      }, {\n        x: -450,\n        y: -300,\n        z: 100\n      }, {\n        x: 450,\n        y: -300,\n        z: 100\n      }, {\n        x: 0,\n        y: -400,\n        z: 150\n      }, {\n        x: -500,\n        y: 50,\n        z: 100\n      }, {\n        x: 500,\n        y: 50,\n        z: 100\n      }];\n      const position = positions[index % positions.length];\n      mesh.position.set(position.x, position.y, position.z);\n      scene.add(mesh);\n      return mesh;\n    }).filter(mesh => mesh !== null);\n\n    // Animation loop with enhanced safety checks for rendering\n    const animate = () => {\n      requestAnimationFrame(animate);\n      try {\n        meshes.forEach(mesh => {\n          if (mesh && mesh.geometry && mesh.material) {\n            mesh.rotation.x += 0.002;\n            mesh.rotation.y += 0.002;\n\n            // Update color dynamically based on rotation\n            if (mesh.material.color) {\n              const hue = (mesh.rotation.x * 0.05 + mesh.rotation.y * 0.05) % 1;\n              mesh.material.color.setHSL(hue, 0.7, 0.6);\n            }\n          }\n        });\n        renderer.render(scene, camera);\n      } catch (error) {\n        logError(\"Error during animation rendering:\", error);\n      }\n    };\n    animate();\n\n    // Cleanup function to prevent memory leaks\n    return () => {\n      try {\n        if (currentMount) {\n          currentMount.removeChild(renderer.domElement);\n        }\n        renderer.dispose();\n        scene.clear();\n      } catch (error) {\n        logError(\"Error during cleanup:\", error);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: mountRef,\n        className: \"floating-shapes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sliding-name-background\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-slide\",\n          children: \"Avi Desai \\u2022 Avi Desai \\u2022 Avi Desai\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"intro-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"greeting-text\",\n            children: \"Hi, I'm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"name-text\",\n            children: \"Avi!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"flipping-text\",\n          children: flippingText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: profile,\n          alt: \"Avi\",\n          className: \"profile-picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"bio-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Bio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Passionate software engineer with extensive experience in frontend development, creating seamless and visually engaging user experiences.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/tL3B47jDrtplgkmDb0jPiBx7x4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","THREE","profile","jsxDEV","_jsxDEV","App","_s","mountRef","flippingText","setFlippingText","texts","index","interval","setInterval","length","clearInterval","currentMount","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","alpha","antialias","setSize","setClearColor","appendChild","domElement","ambientLight","AmbientLight","add","pointLight","PointLight","logError","message","error","console","createSphere","geometry","SphereGeometry","material","MeshPhongMaterial","color","shininess","flatShading","Mesh","createRoundedCylinder","CylinderGeometry","computeVertexNormals","createRoundedBox","shape","Shape","radius","width","height","halfWidth","halfHeight","moveTo","lineTo","quadraticCurveTo","extrudeSettings","depth","bevelEnabled","bevelSegments","steps","bevelSize","bevelThickness","ExtrudeGeometry","geometries","TorusGeometry","ConeGeometry","DodecahedronGeometry","filter","meshes","map","mesh","positions","x","y","z","animate","requestAnimationFrame","forEach","rotation","hue","setHSL","render","removeChild","dispose","clear","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/avi/Desktop/mywebsite/personal-website/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport * as THREE from 'three';\nimport profile from './profile.jpg';\n\nfunction App() {\n  const mountRef = useRef(null);\n  const [flippingText, setFlippingText] = useState(\"trying to build cool stuff\");\n\n  useEffect(() => {\n    const texts = [\"trying to build cool stuff\", \"trying to meet new people\"];\n    let index = 0;\n    const interval = setInterval(() => {\n      index = (index + 1) % texts.length;\n      setFlippingText(texts[index]);\n    }, 3000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    const currentMount = mountRef.current;\n\n    if (!currentMount) return;  // Ensure mount point is available\n\n    // Scene, Camera, Renderer setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 800);\n\n    const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0xffffff, 0); // Transparent background\n    currentMount.appendChild(renderer.domElement);\n\n    // Light setup for a soft and inviting effect\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.9);\n    scene.add(ambientLight);\n\n    const pointLight = new THREE.PointLight(0xffffff, 0.6);\n    pointLight.position.set(200, 300, 400);\n    scene.add(pointLight);\n\n    // Debugging function\n    const logError = (message, error) => {\n      console.error(message, error);\n    };\n\n    // Create geometries with safety checks\n    const createSphere = () => {\n      try {\n        const geometry = new THREE.SphereGeometry(50, 64, 64);\n        const material = new THREE.MeshPhongMaterial({\n          color: 0xffae42,\n          shininess: 150,\n          flatShading: false,\n        });\n        return new THREE.Mesh(geometry, material);\n      } catch (error) {\n        logError(\"Error creating sphere:\", error);\n        return null;\n      }\n    };\n\n    const createRoundedCylinder = () => {\n      try {\n        const geometry = new THREE.CylinderGeometry(20, 20, 100, 64, 64, true);\n        geometry.computeVertexNormals();\n        const material = new THREE.MeshPhongMaterial({\n          color: 0xffae42,\n          shininess: 150,\n          flatShading: false,\n        });\n        return new THREE.Mesh(geometry, material);\n      } catch (error) {\n        logError(\"Error creating cylinder:\", error);\n        return null;\n      }\n    };\n\n    const createRoundedBox = () => {\n      try {\n        const shape = new THREE.Shape();\n        const radius = 10;\n        const width = 70;\n        const height = 70;\n        const halfWidth = width / 2 - radius;\n        const halfHeight = height / 2 - radius;\n\n        shape.moveTo(-halfWidth, halfHeight);\n        shape.lineTo(halfWidth, halfHeight);\n        shape.quadraticCurveTo(width / 2, halfHeight, width / 2, halfHeight - radius);\n        shape.lineTo(width / 2, -halfHeight);\n        shape.quadraticCurveTo(width / 2, -height / 2, halfWidth, -height / 2);\n        shape.lineTo(-halfWidth, -height / 2);\n        shape.quadraticCurveTo(-width / 2, -height / 2, -width / 2, -halfHeight);\n        shape.lineTo(-width / 2, halfHeight - radius);\n        shape.quadraticCurveTo(-width / 2, halfHeight, -halfWidth, halfHeight);\n\n        const extrudeSettings = {\n          depth: 70,\n          bevelEnabled: true,\n          bevelSegments: 16,\n          steps: 2,\n          bevelSize: radius,\n          bevelThickness: radius,\n        };\n\n        const geometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\n        const material = new THREE.MeshPhongMaterial({\n          color: 0xffae42,\n          shininess: 150,\n          flatShading: false,\n        });\n\n        return new THREE.Mesh(geometry, material);\n      } catch (error) {\n        logError(\"Error creating rounded box:\", error);\n        return null;\n      }\n    };\n\n    // Add geometries to scene, ensuring all are properly instantiated\n    const geometries = [\n      createSphere(),\n      createRoundedCylinder(),\n      createRoundedBox(),\n      new THREE.TorusGeometry(35, 15, 30, 100),\n      new THREE.ConeGeometry(40, 80, 32),\n      new THREE.DodecahedronGeometry(40, 1),\n    ].filter(geometry => geometry !== null);\n\n    const meshes = geometries.map((geometry, index) => {\n      if (!geometry) return null;\n\n      const material = new THREE.MeshPhongMaterial({\n        color: 0xffae42,\n        shininess: 150,\n        flatShading: false,\n      });\n\n      const mesh = new THREE.Mesh(geometry, material);\n\n      // Set positions based on index\n      const positions = [\n        { x: -450, y: 250, z: 100 },\n        { x: 450, y: 250, z: 100 },\n        { x: -450, y: -300, z: 100 },\n        { x: 450, y: -300, z: 100 },\n        { x: 0, y: -400, z: 150 },\n        { x: -500, y: 50, z: 100 },\n        { x: 500, y: 50, z: 100 },\n      ];\n      const position = positions[index % positions.length];\n      mesh.position.set(position.x, position.y, position.z);\n\n      scene.add(mesh);\n      return mesh;\n    }).filter(mesh => mesh !== null);\n\n    // Animation loop with enhanced safety checks for rendering\n    const animate = () => {\n      requestAnimationFrame(animate);\n      try {\n        meshes.forEach((mesh) => {\n          if (mesh && mesh.geometry && mesh.material) {\n            mesh.rotation.x += 0.002;\n            mesh.rotation.y += 0.002;\n\n            // Update color dynamically based on rotation\n            if (mesh.material.color) {\n              const hue = (mesh.rotation.x * 0.05 + mesh.rotation.y * 0.05) % 1;\n              mesh.material.color.setHSL(hue, 0.7, 0.6);\n            }\n          }\n        });\n        renderer.render(scene, camera);\n      } catch (error) {\n        logError(\"Error during animation rendering:\", error);\n      }\n    };\n    animate();\n\n    // Cleanup function to prevent memory leaks\n    return () => {\n      try {\n        if (currentMount) {\n          currentMount.removeChild(renderer.domElement);\n        }\n        renderer.dispose();\n        scene.clear();\n      } catch (error) {\n        logError(\"Error during cleanup:\", error);\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div ref={mountRef} className=\"floating-shapes\"></div>\n        <div className=\"sliding-name-background\">\n          <div className=\"name-slide\">Avi Desai • Avi Desai • Avi Desai</div>\n        </div>\n        <div className=\"hero-container\">\n          <div className=\"intro-text\">\n            <span className=\"greeting-text\">Hi, I'm</span> <span className=\"name-text\">Avi!</span>\n          </div>\n          <p className=\"flipping-text\">{flippingText}</p>\n          <img src={profile} alt=\"Avi\" className=\"profile-picture\" />\n        </div>\n      </header>\n\n      <main className=\"App-main\">\n        <section className=\"bio-section\">\n          <h2>Bio</h2>\n          <p>\n            Passionate software engineer with extensive experience in frontend development, creating seamless and visually engaging user experiences.\n          </p>\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,WAAW;AAClB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,OAAO,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,4BAA4B,CAAC;EAE9EF,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAG,CAAC,4BAA4B,EAAE,2BAA2B,CAAC;IACzE,IAAIC,KAAK,GAAG,CAAC;IACb,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCF,KAAK,GAAG,CAACA,KAAK,GAAG,CAAC,IAAID,KAAK,CAACI,MAAM;MAClCL,eAAe,CAACC,KAAK,CAACC,KAAK,CAAC,CAAC;IAC/B,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMI,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACd,MAAMkB,YAAY,GAAGT,QAAQ,CAACU,OAAO;IAErC,IAAI,CAACD,YAAY,EAAE,OAAO,CAAE;;IAE5B;IACA,MAAME,KAAK,GAAG,IAAIjB,KAAK,CAACkB,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAInB,KAAK,CAACoB,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;IACjGJ,MAAM,CAACK,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IAE9B,MAAMC,QAAQ,GAAG,IAAI1B,KAAK,CAAC2B,aAAa,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAC1EH,QAAQ,CAACI,OAAO,CAACT,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDG,QAAQ,CAACK,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;IACrChB,YAAY,CAACiB,WAAW,CAACN,QAAQ,CAACO,UAAU,CAAC;;IAE7C;IACA,MAAMC,YAAY,GAAG,IAAIlC,KAAK,CAACmC,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC;IAC1DlB,KAAK,CAACmB,GAAG,CAACF,YAAY,CAAC;IAEvB,MAAMG,UAAU,GAAG,IAAIrC,KAAK,CAACsC,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAC;IACtDD,UAAU,CAACb,QAAQ,CAACC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACtCR,KAAK,CAACmB,GAAG,CAACC,UAAU,CAAC;;IAErB;IACA,MAAME,QAAQ,GAAGA,CAACC,OAAO,EAAEC,KAAK,KAAK;MACnCC,OAAO,CAACD,KAAK,CAACD,OAAO,EAAEC,KAAK,CAAC;IAC/B,CAAC;;IAED;IACA,MAAME,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,IAAI5C,KAAK,CAAC6C,cAAc,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACrD,MAAMC,QAAQ,GAAG,IAAI9C,KAAK,CAAC+C,iBAAiB,CAAC;UAC3CC,KAAK,EAAE,QAAQ;UACfC,SAAS,EAAE,GAAG;UACdC,WAAW,EAAE;QACf,CAAC,CAAC;QACF,OAAO,IAAIlD,KAAK,CAACmD,IAAI,CAACP,QAAQ,EAAEE,QAAQ,CAAC;MAC3C,CAAC,CAAC,OAAOL,KAAK,EAAE;QACdF,QAAQ,CAAC,wBAAwB,EAAEE,KAAK,CAAC;QACzC,OAAO,IAAI;MACb;IACF,CAAC;IAED,MAAMW,qBAAqB,GAAGA,CAAA,KAAM;MAClC,IAAI;QACF,MAAMR,QAAQ,GAAG,IAAI5C,KAAK,CAACqD,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC;QACtET,QAAQ,CAACU,oBAAoB,CAAC,CAAC;QAC/B,MAAMR,QAAQ,GAAG,IAAI9C,KAAK,CAAC+C,iBAAiB,CAAC;UAC3CC,KAAK,EAAE,QAAQ;UACfC,SAAS,EAAE,GAAG;UACdC,WAAW,EAAE;QACf,CAAC,CAAC;QACF,OAAO,IAAIlD,KAAK,CAACmD,IAAI,CAACP,QAAQ,EAAEE,QAAQ,CAAC;MAC3C,CAAC,CAAC,OAAOL,KAAK,EAAE;QACdF,QAAQ,CAAC,0BAA0B,EAAEE,KAAK,CAAC;QAC3C,OAAO,IAAI;MACb;IACF,CAAC;IAED,MAAMc,gBAAgB,GAAGA,CAAA,KAAM;MAC7B,IAAI;QACF,MAAMC,KAAK,GAAG,IAAIxD,KAAK,CAACyD,KAAK,CAAC,CAAC;QAC/B,MAAMC,MAAM,GAAG,EAAE;QACjB,MAAMC,KAAK,GAAG,EAAE;QAChB,MAAMC,MAAM,GAAG,EAAE;QACjB,MAAMC,SAAS,GAAGF,KAAK,GAAG,CAAC,GAAGD,MAAM;QACpC,MAAMI,UAAU,GAAGF,MAAM,GAAG,CAAC,GAAGF,MAAM;QAEtCF,KAAK,CAACO,MAAM,CAAC,CAACF,SAAS,EAAEC,UAAU,CAAC;QACpCN,KAAK,CAACQ,MAAM,CAACH,SAAS,EAAEC,UAAU,CAAC;QACnCN,KAAK,CAACS,gBAAgB,CAACN,KAAK,GAAG,CAAC,EAAEG,UAAU,EAAEH,KAAK,GAAG,CAAC,EAAEG,UAAU,GAAGJ,MAAM,CAAC;QAC7EF,KAAK,CAACQ,MAAM,CAACL,KAAK,GAAG,CAAC,EAAE,CAACG,UAAU,CAAC;QACpCN,KAAK,CAACS,gBAAgB,CAACN,KAAK,GAAG,CAAC,EAAE,CAACC,MAAM,GAAG,CAAC,EAAEC,SAAS,EAAE,CAACD,MAAM,GAAG,CAAC,CAAC;QACtEJ,KAAK,CAACQ,MAAM,CAAC,CAACH,SAAS,EAAE,CAACD,MAAM,GAAG,CAAC,CAAC;QACrCJ,KAAK,CAACS,gBAAgB,CAAC,CAACN,KAAK,GAAG,CAAC,EAAE,CAACC,MAAM,GAAG,CAAC,EAAE,CAACD,KAAK,GAAG,CAAC,EAAE,CAACG,UAAU,CAAC;QACxEN,KAAK,CAACQ,MAAM,CAAC,CAACL,KAAK,GAAG,CAAC,EAAEG,UAAU,GAAGJ,MAAM,CAAC;QAC7CF,KAAK,CAACS,gBAAgB,CAAC,CAACN,KAAK,GAAG,CAAC,EAAEG,UAAU,EAAE,CAACD,SAAS,EAAEC,UAAU,CAAC;QAEtE,MAAMI,eAAe,GAAG;UACtBC,KAAK,EAAE,EAAE;UACTC,YAAY,EAAE,IAAI;UAClBC,aAAa,EAAE,EAAE;UACjBC,KAAK,EAAE,CAAC;UACRC,SAAS,EAAEb,MAAM;UACjBc,cAAc,EAAEd;QAClB,CAAC;QAED,MAAMd,QAAQ,GAAG,IAAI5C,KAAK,CAACyE,eAAe,CAACjB,KAAK,EAAEU,eAAe,CAAC;QAClE,MAAMpB,QAAQ,GAAG,IAAI9C,KAAK,CAAC+C,iBAAiB,CAAC;UAC3CC,KAAK,EAAE,QAAQ;UACfC,SAAS,EAAE,GAAG;UACdC,WAAW,EAAE;QACf,CAAC,CAAC;QAEF,OAAO,IAAIlD,KAAK,CAACmD,IAAI,CAACP,QAAQ,EAAEE,QAAQ,CAAC;MAC3C,CAAC,CAAC,OAAOL,KAAK,EAAE;QACdF,QAAQ,CAAC,6BAA6B,EAAEE,KAAK,CAAC;QAC9C,OAAO,IAAI;MACb;IACF,CAAC;;IAED;IACA,MAAMiC,UAAU,GAAG,CACjB/B,YAAY,CAAC,CAAC,EACdS,qBAAqB,CAAC,CAAC,EACvBG,gBAAgB,CAAC,CAAC,EAClB,IAAIvD,KAAK,CAAC2E,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EACxC,IAAI3E,KAAK,CAAC4E,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAClC,IAAI5E,KAAK,CAAC6E,oBAAoB,CAAC,EAAE,EAAE,CAAC,CAAC,CACtC,CAACC,MAAM,CAAClC,QAAQ,IAAIA,QAAQ,KAAK,IAAI,CAAC;IAEvC,MAAMmC,MAAM,GAAGL,UAAU,CAACM,GAAG,CAAC,CAACpC,QAAQ,EAAElC,KAAK,KAAK;MACjD,IAAI,CAACkC,QAAQ,EAAE,OAAO,IAAI;MAE1B,MAAME,QAAQ,GAAG,IAAI9C,KAAK,CAAC+C,iBAAiB,CAAC;QAC3CC,KAAK,EAAE,QAAQ;QACfC,SAAS,EAAE,GAAG;QACdC,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,MAAM+B,IAAI,GAAG,IAAIjF,KAAK,CAACmD,IAAI,CAACP,QAAQ,EAAEE,QAAQ,CAAC;;MAE/C;MACA,MAAMoC,SAAS,GAAG,CAChB;QAAEC,CAAC,EAAE,CAAC,GAAG;QAAEC,CAAC,EAAE,GAAG;QAAEC,CAAC,EAAE;MAAI,CAAC,EAC3B;QAAEF,CAAC,EAAE,GAAG;QAAEC,CAAC,EAAE,GAAG;QAAEC,CAAC,EAAE;MAAI,CAAC,EAC1B;QAAEF,CAAC,EAAE,CAAC,GAAG;QAAEC,CAAC,EAAE,CAAC,GAAG;QAAEC,CAAC,EAAE;MAAI,CAAC,EAC5B;QAAEF,CAAC,EAAE,GAAG;QAAEC,CAAC,EAAE,CAAC,GAAG;QAAEC,CAAC,EAAE;MAAI,CAAC,EAC3B;QAAEF,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC,GAAG;QAAEC,CAAC,EAAE;MAAI,CAAC,EACzB;QAAEF,CAAC,EAAE,CAAC,GAAG;QAAEC,CAAC,EAAE,EAAE;QAAEC,CAAC,EAAE;MAAI,CAAC,EAC1B;QAAEF,CAAC,EAAE,GAAG;QAAEC,CAAC,EAAE,EAAE;QAAEC,CAAC,EAAE;MAAI,CAAC,CAC1B;MACD,MAAM7D,QAAQ,GAAG0D,SAAS,CAACxE,KAAK,GAAGwE,SAAS,CAACrE,MAAM,CAAC;MACpDoE,IAAI,CAACzD,QAAQ,CAACC,GAAG,CAACD,QAAQ,CAAC2D,CAAC,EAAE3D,QAAQ,CAAC4D,CAAC,EAAE5D,QAAQ,CAAC6D,CAAC,CAAC;MAErDpE,KAAK,CAACmB,GAAG,CAAC6C,IAAI,CAAC;MACf,OAAOA,IAAI;IACb,CAAC,CAAC,CAACH,MAAM,CAACG,IAAI,IAAIA,IAAI,KAAK,IAAI,CAAC;;IAEhC;IACA,MAAMK,OAAO,GAAGA,CAAA,KAAM;MACpBC,qBAAqB,CAACD,OAAO,CAAC;MAC9B,IAAI;QACFP,MAAM,CAACS,OAAO,CAAEP,IAAI,IAAK;UACvB,IAAIA,IAAI,IAAIA,IAAI,CAACrC,QAAQ,IAAIqC,IAAI,CAACnC,QAAQ,EAAE;YAC1CmC,IAAI,CAACQ,QAAQ,CAACN,CAAC,IAAI,KAAK;YACxBF,IAAI,CAACQ,QAAQ,CAACL,CAAC,IAAI,KAAK;;YAExB;YACA,IAAIH,IAAI,CAACnC,QAAQ,CAACE,KAAK,EAAE;cACvB,MAAM0C,GAAG,GAAG,CAACT,IAAI,CAACQ,QAAQ,CAACN,CAAC,GAAG,IAAI,GAAGF,IAAI,CAACQ,QAAQ,CAACL,CAAC,GAAG,IAAI,IAAI,CAAC;cACjEH,IAAI,CAACnC,QAAQ,CAACE,KAAK,CAAC2C,MAAM,CAACD,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YAC3C;UACF;QACF,CAAC,CAAC;QACFhE,QAAQ,CAACkE,MAAM,CAAC3E,KAAK,EAAEE,MAAM,CAAC;MAChC,CAAC,CAAC,OAAOsB,KAAK,EAAE;QACdF,QAAQ,CAAC,mCAAmC,EAAEE,KAAK,CAAC;MACtD;IACF,CAAC;IACD6C,OAAO,CAAC,CAAC;;IAET;IACA,OAAO,MAAM;MACX,IAAI;QACF,IAAIvE,YAAY,EAAE;UAChBA,YAAY,CAAC8E,WAAW,CAACnE,QAAQ,CAACO,UAAU,CAAC;QAC/C;QACAP,QAAQ,CAACoE,OAAO,CAAC,CAAC;QAClB7E,KAAK,CAAC8E,KAAK,CAAC,CAAC;MACf,CAAC,CAAC,OAAOtD,KAAK,EAAE;QACdF,QAAQ,CAAC,uBAAuB,EAAEE,KAAK,CAAC;MAC1C;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtC,OAAA;IAAK6F,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB9F,OAAA;MAAQ6F,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5B9F,OAAA;QAAK+F,GAAG,EAAE5F,QAAS;QAAC0F,SAAS,EAAC;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACtDnG,OAAA;QAAK6F,SAAS,EAAC,yBAAyB;QAAAC,QAAA,eACtC9F,OAAA;UAAK6F,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAiC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eACNnG,OAAA;QAAK6F,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7B9F,OAAA;UAAK6F,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB9F,OAAA;YAAM6F,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,KAAC,eAAAnG,OAAA;YAAM6F,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnF,CAAC,eACNnG,OAAA;UAAG6F,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAE1F;QAAY;UAAA4F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/CnG,OAAA;UAAKoG,GAAG,EAAEtG,OAAQ;UAACuG,GAAG,EAAC,KAAK;UAACR,SAAS,EAAC;QAAiB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAETnG,OAAA;MAAM6F,SAAS,EAAC,UAAU;MAAAC,QAAA,eACxB9F,OAAA;QAAS6F,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC9B9F,OAAA;UAAA8F,QAAA,EAAI;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACZnG,OAAA;UAAA8F,QAAA,EAAG;QAEH;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACjG,EAAA,CA1NQD,GAAG;AAAAqG,EAAA,GAAHrG,GAAG;AA4NZ,eAAeA,GAAG;AAAC,IAAAqG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}